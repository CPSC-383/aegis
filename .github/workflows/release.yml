name: Build and Release Aegis

on:
  push:
    tags:
      - "v*.*.*-*"

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: "macos-latest"
            platform: "mac"
          - os: "ubuntu-latest"
            platform: "linux"
          - os: "windows-latest"
            platform: "win"
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install
        working-directory: ./client

      - name: Build app for A1
        if: contains(github.ref_name, '-a1')
        run: npm run build:pack:a1
        working-directory: ./client

      - name: Build app
        if: contains(github.ref_name, '-a3')
        run: npm run build:pack
        working-directory: ./client

      - name: Zip Linux
        if: startsWith(matrix.os, 'ubuntu')
        run: 7z a packed-client/linux-client.zip ./packed-client/*.AppImage
        working-directory: ./client

      - name: Zip Mac
        if: startsWith(matrix.os, 'macos')
        run: 7z a packed-client/mac-client.zip ./packed-client/mac-universal/*.app
        working-directory: ./client

      - name: Zip Windows
        if: startsWith(matrix.os, 'windows')
        run: 7z a packed-client/win-client.zip ./packed-client/*.exe
        working-directory: ./client

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-client
          path: |
            ./client/packed-client/*.zip

  release:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Clean client
        run: rm -rf client/*

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./client/

      - name: Choose correct requirements.txt
        run: |
          if [[ "${github.ref_name}" == *"-a1" ]]; then
            cp requirements-a1.txt requirements.txt
          elif [[ "${github.ref_name}" == *"-a3" ]]; then
            cp requirements-a3.txt requirements.txt
          fi
          rm requirements-a1.txt requirements-a3.txt

      - name: Update imports (A1)
        if: contains(github.ref_name, '-a1')
        run: |
          find ./src/aegis -type f \
            -not -path "*/__pycache__/*" \
            -not -path "*/agent_predictions/*" \
            -exec grep -l "a3" {} + | xargs sed -i 's/a3/a1/g'

      - name: Update worlds
        run: |
          if [[ "${github.ref_name}" == *"-a1" ]]; then
            find ./worlds -mindepth 1 \
              -not -path '*/a1-assignment-worlds/*' \
              -not -path '*/a1-assignment-worlds' \
              -delete
            mv ./worlds/a1-assignment-worlds/* ./worlds
            rm -rf ./worlds/a1-assignment-worlds
          elif [[ "${github.ref_name}" == *"-a3" ]]; then
            find ./worlds -mindepth 1 \
              -not -path '*/a3-assignment-worlds/*' \
              -not -path '*/a3-assignment-worlds' \
              -delete
            mv ./worlds/a3-assignment-worlds/* ./worlds
            rm -rf ./worlds/a3-assignment-worlds
          fi

      - name: Remove extra files and folders
        run: |
          if [[ "${github.ref_name}" == *"-a1" ]]; then
            rm -rf ./src/a3
          elif [[ "${github.ref_name}" == *"-a3" ]]; then
            rm -rf ./src/a1
          fi

          rm -rf .git .github ./docs scripts .gitignore README

      - name: Zip repo
        run: |
          cd ..
          zip -r aegis.zip $(basename $GITHUB_WORKSPACE)

      - name: Create release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ../aegis.zip
          tag: ${{ github.ref_name }}
