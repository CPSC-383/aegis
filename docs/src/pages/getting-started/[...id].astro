---
import { getCollection, render } from "astro:content";
import type { CollectionEntry } from "astro:content";
import GettingStartedLayout from "@/layouts/GettingStartedLayout.astro";
import Aside from "@/components/Aside.astro";

interface Props {
  entry: CollectionEntry<"getting-started">;
}

export async function getStaticPaths() {
  const entries = await getCollection("getting-started");

  return entries.map((entry) => ({
    params: { id: entry.id },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content, headings } = await render(entry);

const entries = await getCollection("getting-started");

const groupedDocs = entries.reduce(
  (acc, entry) => {
    const section = entry.id.split("/")[0];

    if (!acc[section]) {
      acc[section] = [];
    }

    acc[section].push(entry);

    return acc;
  },
  {} as Record<string, CollectionEntry<"getting-started">[]>,
);
---

<GettingStartedLayout
  headings={headings}
  groupedDocs={groupedDocs}
  {...entry.data}
>
  <Content components={{ Aside }} />
</GettingStartedLayout>
